#6. show column names of the data table.
colnames(CondosNYC)
# HW #1 Due 11:59PM, September 7
# Instructions: write the code to answer questions below. Sumbit this file with code on
# blackboard. You are not limited on the number of  lines of code you will write to
# anseach question.
# Write code to:
#1. load ggplot2 library
library(ggplot2)
#2. import data from NYCrealEstateData.csv file in R. Call it CondosNYC.
# I am giving you the solution to 2. Make sure you set working directory!
getwd()
# setwd("~/Desktop/DSO 424/HW1")
CondosNYC=read.csv("NYCrealEstateData.csv")
#3. show data structure.
# data.frame
class(CondosNYC)
#4. show how many missing values are in the data set.
# 96
sum(is.na(CondosNYC))
#5. show how many condos are in the data set and how
# many attributes on each condo are measured.
# 2626 13
dim(CondosNYC)
#6. show column names of the data table.
colnames(CondosNYC)
#7. show the Boros from which this data is gathered.
# Hint: function unique() lists unique values of a column/vector:
# unique(VectorName) or unique(TableName$ColumnName).
?unique()
unique(CondosNYV$Boro)
unique(CondosNYC$Boro)
dim(CondosNYC)[2]
#5. show how many condos are in the data set and how
# many attributes on each condo are measured.
# 2626 13
dim(CondosNYC)[1]
dim(CondosNYC)[2]
#8. show how many condos were built between 2000 and 2010.
CondosNYC %>% filter(Year.Built >= 2000
& Year.Built <= 2010 %>%
summarise(Count=n()))
#8. show how many condos were built between 2000 and 2010.
CondosNYC %>% filter(Year.Built >= 2000
& Year.Built <= 2010 %>% summarise(Count=n()))
& Year.Built <= 2010) %>% summarise(Count=n())
#8. show how many condos were built between 2000 and 2010.
CondosNYC %>% filter(Year.Built >= 2000 & Year.Built <= 2010) %>% summarise(Count=n())
#8. show how many condos were built between 2000 and 2010.
? %>%
CondosNYC %>% filter(Year.Built >= 2000 & Year.Built <= 2010) %>% summarise(Count=n())
# Write code to:
#1. load ggplot2 library
library(ggplot2)
library(dplyr)
#2. import data from NYCrealEstateData.csv file in R. Call it CondosNYC.
# I am giving you the solution to 2. Make sure you set working directory!
getwd()
# setwd("~/Desktop/DSO 424/HW1")
CondosNYC=read.csv("NYCrealEstateData.csv")
#3. show data structure.
# data.frame
class(CondosNYC)
#4. show how many missing values are in the data set.
# 96
sum(is.na(CondosNYC))
#5. show how many condos are in the data set and how
# many attributes on each condo are measured.
# 2626 13
dim(CondosNYC)[1]
dim(CondosNYC)[2]
#6. show column names of the data table.
colnames(CondosNYC)
#7. show the Boros from which this data is gathered.
# Hint: function unique() lists unique values of a column/vector:
# unique(VectorName) or unique(TableName$ColumnName).
# ?unique()
unique(CondosNYC$Boro)
#8. show how many condos were built between 2000 and 2010.
CondosNYC %>% filter(Year.Built >= 2000 & Year.Built <= 2010) %>% summarise(Count=n())
& Year.Built <= 2010) %>% summarise(Count=n())
#8. show how many condos were built between 2000 and 2010.
CondosNYC %>% filter(Year.Built >= 2000 &
Year.Built <= 2010) %>% summarise(Count=n())
#9. create a histogram of Market Value per SqFt.
hist(CondosNYC$Market.Value.per.SqFt)
#10. create a histogram of Market Value per SqFt and map Boro to color.
CondosNYC %>% ggplot(aes(x=Market.Value.per.SqFt,fill=Boro)) + geom_histogram()
#10. create a histogram of Market Value per SqFt and map Boro to color.
?aes()
#9. create a histogram of Market Value per SqFt.
hist(CondosNYC$Market.Value.per.SqFt)
CondosNYC %>% ggplot(aes(x=Market.Value.per.SqFt,fill=Boro)) + geom_histogram()
#11. create a histogram of Market Value per SqFt and map Boro to color and
# facet on Boro.
CondosNYC %>% ggplot(aes(x=Market.Value.per.SqFt,fill=Boro)) + geom_histogram() +
facet_wrap(~Boro, scales="free")
?facet_wrap
#11. create a histogram of Market Value per SqFt and map Boro to color and
# facet on Boro.
CondosNYC %>% ggplot(aes(x=Market.Value.per.SqFt,fill=Boro)) + geom_histogram() +
facet_wrap(~Boro, scales="free")
#11. create a histogram of Market Value per SqFt and map Boro to color and
# facet on Boro.
CondosNYC %>% ggplot(aes(x=Market.Value.per.SqFt,fill=Boro)) + geom_histogram() +
facet_wrap(~Boro)
#12. create a histogram of Market Value per SqFt and map Boro to color and
# facet on Boro and make scales free, i.e. range of values for y axis for
# each histogram will be determined based on the data for each histogram.
CondosNYC %>% ggplot(aes(x=Market.Value.per.SqFt,fill=Boro)) + geom_histogram() +
facet_wrap(~Boro, scales="free")
#13. create a histogram described in the previous question but only for buildings
# with fewer than 1000 units.
CondosNYC %>% filter (Total.Units <1000) %>% ggplot(aes(x=Market.Value.per.SqFt,fill=Boro)) + geom_histogram() +
facet_wrap(~Boro, scales="free")
